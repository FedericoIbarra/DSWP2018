Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"NullableNotNullManager\">\n    <option name=\"myDefaultNullable\" value=\"android.support.annotation.Nullable\" />\n    <option name=\"myDefaultNotNull\" value=\"android.support.annotation.NonNull\" />\n    <option name=\"myNullables\">\n      <value>\n        <list size=\"4\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.Nullable\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nullable\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.Nullable\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.Nullable\" />\n        </list>\n      </value>\n    </option>\n    <option name=\"myNotNulls\">\n      <value>\n        <list size=\"4\">\n          <item index=\"0\" class=\"java.lang.String\" itemvalue=\"org.jetbrains.annotations.NotNull\" />\n          <item index=\"1\" class=\"java.lang.String\" itemvalue=\"javax.annotation.Nonnull\" />\n          <item index=\"2\" class=\"java.lang.String\" itemvalue=\"edu.umd.cs.findbugs.annotations.NonNull\" />\n          <item index=\"3\" class=\"java.lang.String\" itemvalue=\"android.support.annotation.NonNull\" />\n        </list>\n      </value>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_1_7\" project-jdk-name=\"1.8\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/build/classes\" />\n  </component>\n  <component name=\"ProjectType\">\n    <option name=\"id\" value=\"Android\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(date 1522202218000)
+++ .idea/misc.xml	(revision )
@@ -24,7 +24,7 @@
       </value>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_7" project-jdk-name="1.8" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_1_8" project-jdk-name="1.8" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/build/classes" />
   </component>
   <component name="ProjectType">
Index: app/src/main/java/mx/iteso/sportsquare/SignUpActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package mx.iteso.sportsquare;\n\nimport android.annotation.SuppressLint;\nimport android.app.ProgressDialog;\nimport android.content.Context;\nimport android.content.Intent;\nimport android.os.AsyncTask;\nimport android.os.Bundle;\nimport android.support.annotation.NonNull;\nimport android.support.annotation.Nullable;\nimport android.support.v7.app.AppCompatActivity;\nimport android.text.TextUtils;\nimport android.util.Log;\nimport android.view.View;\nimport android.widget.Button;\nimport android.widget.CheckBox;\nimport android.widget.EditText;\nimport android.widget.ProgressBar;\nimport android.widget.Toast;\n\nimport com.google.android.gms.tasks.OnCompleteListener;\nimport com.google.android.gms.tasks.Task;\nimport com.google.firebase.auth.AuthResult;\nimport com.google.firebase.auth.FirebaseAuth;\nimport com.google.firebase.auth.FirebaseUser;\nimport com.google.firebase.database.DatabaseReference;\nimport com.google.firebase.database.FirebaseDatabase;\n\n/**\n *\n * Created by dgalindo on 10/03/18.\n */\n\npublic class SignUpActivity extends AppCompatActivity implements View.OnClickListener{\n\n    private static final String TAG = \"SIGNUP_TAG\";\n    private EditText newUsername, newName, newEmailET, newPasswordET, retypePassET;\n    private CheckBox cbIsAdmin;\n\n    private DatabaseReference mDatabase;\n    private FirebaseAuth auth;\n    private ProgressDialog progressDialog;\n\n    @Override\n    protected void onCreate(@Nullable Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_signup);\n        newUsername = findViewById(R.id.etUsername);\n        newName = findViewById(R.id.etName);\n        newEmailET = findViewById(R.id.etSignupEmail);\n        newPasswordET = findViewById(R.id.etSignupPassword);\n        retypePassET = findViewById(R.id.etRetypePass);\n        cbIsAdmin = findViewById(R.id.cbAdminAccount);\n\n        mDatabase = FirebaseDatabase.getInstance().getReference();\n\n        Button signupBtn = findViewById(R.id.btnSignup);\n        signupBtn.setOnClickListener(this);\n\n    }\n\n    //Click listener.\n    @Override\n    public void onClick(View view) {\n\n        progressDialog = new ProgressDialog(SignUpActivity.this);\n        progressDialog.setMessage(\"Loading...\");\n        progressDialog.show();\n\n\n        //Check if the EditTexts are empty. If true: show toast.\n        if (TextUtils.isEmpty(newEmailET.getText().toString())\n                || TextUtils.isEmpty(newPasswordET.getText().toString())\n                || TextUtils.isEmpty(retypePassET.getText().toString())\n                || TextUtils.isEmpty(newUsername.getText())\n                || TextUtils.isEmpty(newName.getText())) {\n\n            Toast.makeText(this, \"You MUST fill every field to continue!\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        //Confirms if the EditTexts of the passwords are correct. If false: show toast.\n        if (!TextUtils.equals(newPasswordET.getText().toString(), retypePassET.getText().toString())) {\n            Toast.makeText(this, \"Both password fields MUST match\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n\n        String email = newEmailET.getText().toString();\n        String password = newPasswordET.getText().toString();\n\n        //Check if password have more than 6 chars (Firebase rule).\n        if (password.length() < 6) {\n            Toast.makeText(this, \"Password must have more than 6 characters!\", Toast.LENGTH_SHORT).show();\n            return;\n        }\n\n        //Authenticates user with email and password.\n        authenticateNewUser(email, password);\n\n    }\n\n    //Creates an user authentication in Firebase.\n    private void authenticateNewUser(final String email, final String password) {\n        auth = FirebaseAuth.getInstance();\n        auth.createUserWithEmailAndPassword(email, password)\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\n                    @Override\n                    public void onComplete(@NonNull Task<AuthResult> task) {\n                        if (task.isSuccessful()) {\n                            Log.d(TAG, \"Authentication successful\");\n\n                            insertNewUserToDB(email, password);\n\n\n                        } else {\n                            Toast.makeText(SignUpActivity.this, \"Authentication failed.\",\n                                    Toast.LENGTH_SHORT).show();\n                        }\n                    }\n                });\n    }\n\n\n    //Save a user into the Firebase Database.\n    private void insertNewUserToDB(String email, String password) {\n        FirebaseUser currentFirebaseUser = FirebaseAuth.getInstance().getCurrentUser() ;\n        DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference(\"users\");\n        String UUID;\n\n        assert currentFirebaseUser != null;\n        UUID = currentFirebaseUser.getUid();\n\n        Log.d(\"UUID_TAG\", \"THE UUID >> \" + UUID);\n\n        //creates new userId for firebase.\n        String userId = mDatabase.push().getKey();\n        //creating user object.\n        User user = new User(UUID, email, newUsername.getText().toString(), password, newName.getText().toString(),\n                \"example_birth\", cbIsAdmin.isChecked());\n\n        //pushing user to 'users' node using the userId.\n        mDatabase.child(userId).setValue(user);\n        Toast.makeText(getApplicationContext(), \"Signup successfull!!\", Toast.LENGTH_SHORT).show();\n\n\n        progressDialog.dismiss();\n        startActivity(new Intent(SignUpActivity.this, LoginActivity.class));\n        finish();\n    }\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/mx/iteso/sportsquare/SignUpActivity.java	(date 1522202218000)
+++ app/src/main/java/mx/iteso/sportsquare/SignUpActivity.java	(revision )
@@ -1,10 +1,6 @@
 package mx.iteso.sportsquare;
 
-import android.annotation.SuppressLint;
-import android.app.ProgressDialog;
-import android.content.Context;
 import android.content.Intent;
-import android.os.AsyncTask;
 import android.os.Bundle;
 import android.support.annotation.NonNull;
 import android.support.annotation.Nullable;
@@ -13,16 +9,13 @@
 import android.util.Log;
 import android.view.View;
 import android.widget.Button;
-import android.widget.CheckBox;
 import android.widget.EditText;
-import android.widget.ProgressBar;
 import android.widget.Toast;
 
 import com.google.android.gms.tasks.OnCompleteListener;
 import com.google.android.gms.tasks.Task;
 import com.google.firebase.auth.AuthResult;
 import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.FirebaseUser;
 import com.google.firebase.database.DatabaseReference;
 import com.google.firebase.database.FirebaseDatabase;
 
@@ -33,24 +26,21 @@
 
 public class SignUpActivity extends AppCompatActivity implements View.OnClickListener{
 
-    private static final String TAG = "SIGNUP_TAG";
-    private EditText newUsername, newName, newEmailET, newPasswordET, retypePassET;
-    private CheckBox cbIsAdmin;
+
+    private EditText newEmailET;
+    private EditText newPasswordET;
+    private EditText retypePassET;
 
     private DatabaseReference mDatabase;
-    private FirebaseAuth auth;
-    private ProgressDialog progressDialog;
+
 
     @Override
     protected void onCreate(@Nullable Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_signup);
-        newUsername = findViewById(R.id.etUsername);
-        newName = findViewById(R.id.etName);
         newEmailET = findViewById(R.id.etSignupEmail);
         newPasswordET = findViewById(R.id.etSignupPassword);
         retypePassET = findViewById(R.id.etRetypePass);
-        cbIsAdmin = findViewById(R.id.cbAdminAccount);
 
         mDatabase = FirebaseDatabase.getInstance().getReference();
 
@@ -59,21 +49,15 @@
 
     }
 
+
     //Click listener.
     @Override
     public void onClick(View view) {
 
-        progressDialog = new ProgressDialog(SignUpActivity.this);
-        progressDialog.setMessage("Loading...");
-        progressDialog.show();
-
-
         //Check if the EditTexts are empty. If true: show toast.
         if (TextUtils.isEmpty(newEmailET.getText().toString())
                 || TextUtils.isEmpty(newPasswordET.getText().toString())
-                || TextUtils.isEmpty(retypePassET.getText().toString())
-                || TextUtils.isEmpty(newUsername.getText())
-                || TextUtils.isEmpty(newName.getText())) {
+                || TextUtils.isEmpty(retypePassET.getText().toString())) {
 
             Toast.makeText(this, "You MUST fill every field to continue!", Toast.LENGTH_SHORT).show();
             return;
@@ -87,31 +71,64 @@
 
 
         String email = newEmailET.getText().toString();
-        String password = newPasswordET.getText().toString();
+        String password = Hash.sha1(newPasswordET.getText().toString());
+
+        //Validate password
+        if(!validatePass(newPasswordET.getText().toString())) {
+            Toast.makeText(this, "Password must have at least one capital letter, one special character and one number", Toast.LENGTH_SHORT).show();
+            return;
+        }
 
         //Check if password have more than 6 chars (Firebase rule).
-        if (password.length() < 6) {
+        if (newPasswordET.getText().toString().length() < 6) {
             Toast.makeText(this, "Password must have more than 6 characters!", Toast.LENGTH_SHORT).show();
             return;
         }
 
+
+
+
+
         //Authenticates user with email and password.
         authenticateNewUser(email, password);
 
     }
 
+    /**
+     * Validate Password.
+     * At least one capital letter, one number and one special character.
+     * @param password a string with the password.
+     * */
+
+    boolean validatePass(String password) {
+        boolean bol = false;
+        int i, x = 0;
+
+        for(i = 0; i < password.length(); i++) {
+            if(password.charAt(i) > 64 && password.charAt(i) < 91) x++;
+            if(password.charAt(i) > 47 && password.charAt(i) < 58) x++;
+            if(password.charAt(i) > 32 && password.charAt(i) < 48) x++;
+        }
+
+        if(x == 3) bol = true;
+
+        return bol;
+    }
+
     //Creates an user authentication in Firebase.
     private void authenticateNewUser(final String email, final String password) {
-        auth = FirebaseAuth.getInstance();
+        final FirebaseAuth auth = FirebaseAuth.getInstance();
         auth.createUserWithEmailAndPassword(email, password)
                 .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                     @Override
                     public void onComplete(@NonNull Task<AuthResult> task) {
                         if (task.isSuccessful()) {
-                            Log.d(TAG, "Authentication successful");
+                            Log.d("AUTH_LOG", "Authentication successful");
+                            //insertNewUserToDB(email, password);
 
-                            insertNewUserToDB(email, password);
-
+                            //Start LoginActivity.
+                            startActivity(new Intent(SignUpActivity.this, LoginActivity.class));
+                            finish();
 
                         } else {
                             Toast.makeText(SignUpActivity.this, "Authentication failed.",
@@ -123,31 +140,19 @@
 
 
     //Save a user into the Firebase Database.
+    //TODO: FIRST it must be created some rule to link user auth UUID to the new User UUID.
     private void insertNewUserToDB(String email, String password) {
-        FirebaseUser currentFirebaseUser = FirebaseAuth.getInstance().getCurrentUser() ;
         DatabaseReference mDatabase = FirebaseDatabase.getInstance().getReference("users");
-        String UUID;
-
-        assert currentFirebaseUser != null;
-        UUID = currentFirebaseUser.getUid();
-
-        Log.d("UUID_TAG", "THE UUID >> " + UUID);
 
         //creates new userId for firebase.
         String userId = mDatabase.push().getKey();
         //creating user object.
-        User user = new User(UUID, email, newUsername.getText().toString(), password, newName.getText().toString(),
-                "example_birth", cbIsAdmin.isChecked());
+        User user = new User(email,"prueba123", password, Hash.sha1("Diego"),
+                "Galindo", "14-02-92", true);
 
         //pushing user to 'users' node using the userId.
         mDatabase.child(userId).setValue(user);
-        Toast.makeText(getApplicationContext(), "Signup successfull!!", Toast.LENGTH_SHORT).show();
-
-
-        progressDialog.dismiss();
-        startActivity(new Intent(SignUpActivity.this, LoginActivity.class));
-        finish();
+        Toast.makeText(this, "Signup successfull!!", Toast.LENGTH_SHORT).show();
     }
-
 
 }
